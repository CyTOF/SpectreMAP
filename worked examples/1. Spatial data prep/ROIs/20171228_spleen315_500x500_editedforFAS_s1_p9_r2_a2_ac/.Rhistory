spatial.dat$rois$`20171228_spleen315_500x500_editedforFAS_s1_p9_r2_a2_ac`$
spatial.dat$cell.dat <- list()
spatial.dat
spatial.dat$rois
names(spatial.dat$rois)
x <- data.table()
x
names(spatial.dat$rois[[i]]$tiffs)
sums <- List()
sums <- list()
names(spatial.dat$rois)
i <- "20171228_spleen315_500x500_editedforFAS_s1_p9_r2_a2_ac"
# i <- "20171228_spleen315_500x500_editedforFAS_s1_p9_r2_a2_ac"
sums <- list()
for(a in names(spatial.dat$rois[[i]]$tiffs)){
sums[[a]] <- do.summarise.mask(spatial.dat$rois[[i]]$tiffs[[a]],
polygon = spatial.dat$rois[[i]]$polygons[[1]])
}
source('~/Desktop/Spectre-spatial workflow/Spectre-spatial workflow.R', echo=TRUE)
sums
sums
for(i in names(spatial.dat$rois)){
# i <- "20171228_spleen315_500x500_editedforFAS_s1_p9_r2_a2_ac"
sums <- list()
for(a in names(spatial.dat$rois[[i]]$tiffs)){
sums[[a]] <- do.summarise.mask(spatial.dat$rois[[i]]$tiffs[[a]],
polygon = spatial.dat$rois[[i]]$polygons[[1]])
}
sums <- rbindlist(sums, fill = TRUE)
spatial.dat$rois[[i]]$tiffs[[a]]$cell.data <- sums
}
### Load packages
library(Spectre)
package.check()
package.load()
# package.check(group = "spatial")
# package.load(group = "spatial")
library(tiff)
library(rgeos)
library(raster)
### Set directories
dirname(rstudioapi::getActiveDocumentContext()$path)            # Finds the directory where this script is located
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))     # Sets the working directory to where the script is located
getwd()
start.dr <- getwd()
start.dr
setwd("ROIs/")
roi.dir <- getwd()
setwd(start.dr)
setwd("measurement/")
measure.dir <- getwd()
setwd(start.dr)
### Read in spatial data
## Read in tiffs and mask
setwd(roi.dir)
list.dirs()
spatial.dat <- read.spatial.files(loc = roi.dir,
name = "spatial.dat",
ext = ".tiff",
mask.ext = "_mask.tiff",
convert.to.raster = TRUE)
as.matrix(names(spatial.dat))
spatial.dat$rois[[1]]$tiffs
spatial.dat$rois[[1]]$mask
# spatial.dat$rois
#
# spatial.dat
#     $ROIs
#         $ROI_001
#             $tiffs
#             $mask # keyword match and migrate
#             $polygons
#             $centroids
#         $ROI_001
#             $tiffs
#             $mask
#             $polygons
#             $centroids
#     $cell.dat
## Calculate polygons and centroid coordinates (might take a few minutes)
for(i in names(spatial.dat$rois)){
#i <- names(spatial.dat)[[1]]
spatial.dat$rois[[i]]$polygons <- list()
spatial.dat$rois[[i]]$polygons[[i]] <- do.convert.mask.to.outline(spatial.dat$rois[[i]]$mask[[1]])
}
for(i in names(spatial.dat$rois)){
#i <- names(spatial.dat)[[1]]
spatial.dat$rois[[i]]$centroids <- list()
temp <- gCentroid(spatial.dat$rois[[i]]$polygons[[1]],byid=TRUE)
temp <- as.data.frame(temp)
spatial.dat$rois[[i]]$centroids[[i]] <- temp
}
spatial.dat$rois[[1]]$centroids[[1]]
spatial.dat$rois[[2]]$centroids[[1]]
x <- data.table()
for(i in names(spatial.dat$rois)){
# i <- "20171228_spleen315_500x500_editedforFAS_s1_p9_r2_a2_ac"
sums <- list()
for(a in names(spatial.dat$rois[[i]]$tiffs)){
sums[[a]] <- do.summarise.mask(spatial.dat$rois[[i]]$tiffs[[a]],
polygon = spatial.dat$rois[[i]]$polygons[[1]])
}
sums <- rbindlist(sums, fill = TRUE)
spatial.dat$rois[[i]]$tiffs[[a]]$cell.data <- sums
}
sums
sums[[a]]
sums <- list()
for(a in names(spatial.dat$rois[[i]]$tiffs)){
sums[[a]] <- do.summarise.mask(spatial.dat$rois[[i]]$tiffs[[a]],
polygon = spatial.dat$rois[[i]]$polygons[[1]])
}
sums
sums[["HistoneH3_Yb176.tiff"]]
names(sums)
sums[[1]][1]
sums[[1]][2]
sums[[1]][1]
sums[[1]][3]
sums[[1]][4]
names(sums)
names(sums[[1]])
sums[[1]][1]
sums[[2]][1]
sums[[1]][1]
sums[[1]][2]
ttl <- cbind(sums[[1]][1], sums[[1]][2])
ttl[a]
ttl
ttl[x]
ttl[[[x]]
sums <- rbindlist(sums, fill = TRUE)
spatial.dat$rois[[i]]$tiffs[[a]]$cell.data <- sums
}
## read.spatial.files -- tiffs and mask
## calculate polygons
## claculate outlines
## do.summarise.masks
## calculate cell data per mask -- parallelise where possible (future?)
spatial.dat$cell.dat <- list()
### Read in cellular measurement data
setwd(measure.dir)
list.files()
##
cell.mes <- fread("cell.csv", header = TRUE)
cell.mes
image.dat <- fread("Image.csv", header = TRUE)
image.dat
nrow(cell.mes) # 7361
as.matrix(names(cell.mes))
# Intensity_MeanIntensity_FullStackFiltered
# Intensity_MeanIntensity_FullStack
# Intensity_MedianIntensity_FullStackFiltered
# Intensity_MedianIntensity_FullStack
nms <- cell.mes[,c(1:2),]
nms
means <- cell.mes[,grepl( "Intensity_MeanIntensity_FullStack_" , names(cell.mes)),with = FALSE]
names(means) <- gsub("Intensity_MeanIntensity_FullStack_c", "", names(means))
names(means)
for(i in c(1:length(names(means)))){
a <- names(means)[i]
if(nchar(a) == 1){
a <- paste0("0", a)
names(means)[i] <- a
}
}
means <- means[,sort(names(means)),with = FALSE]
cell.mes.mean <- cbind(nms, means)
cell.mes.mean
ImageName <- rep("blank", nrow(cell.mes.mean))
cell.mes.mean <- cbind(ImageName, cell.mes.mean)
cell.mes.mean
##
############## remove the '_FullStack' or whatever, so it matches the names of each ROI in the spatial.dat list
##
as.matrix(image.dat$FileName_FullStack)
filenames <- image.dat$FileName_FullStack
filenames <- gsub("_full.tiff", "", filenames)
for(i in c(1:length(filenames))){
a <- filenames[[i]]
temp <- cell.mes.mean[cell.mes.mean[["ImageNumber"]] == i,][["ImageName"]]
temp <- rep(a, length(temp))
cell.mes.mean[cell.mes.mean[["ImageNumber"]] == i,][["ImageName"]] <- temp
}
cell.mes.mean
names(cell.mes.mean) <- c("ImageName", "ImageNumber", "ObjectNumber", "Alpha_SMA",
"Vimentin",
"CD11b",
"CD45",
"CD45error",
"CD68",
"CD20",
"CD8a",
"Collagen_I",
"CD3",
"HH3",
"DNA-1",
"DNA-2")
cell.mes.mean
temp <- cell.mes.mean[,c(4:length(names(cell.mes.mean))),with = FALSE]*65535
cell.mes.mean[,c(4:length(names(cell.mes.mean)))] <- temp
cell.mes.mean
### transfer XY coords
cell.mes.mean
nrow(cell.mes.mean[cell.mes.mean[["ImageName"]] == "20171228_spleen315_500x500_editedforFAS_s1_p9_r2_a2_ac",])
nrow(spatial.dat[[1]]$centroids[[1]])
test <- cbind(cell.mes.mean[cell.mes.mean[["ImageName"]] == "20171228_spleen315_500x500_editedforFAS_s1_p9_r2_a2_ac",], spatial.dat[[1]]$centroids[[1]])
test.sum <- do.summarise.mask(spatial.dat[[1]]$tiffs$CD20_Dy161.tiff,
polygon = spatial.dat[[1]]$polygons[[1]])
nrow(test.sum)
test.sum$layer <- test.sum$layer*65535
make.spatial.plot(test.sum, "x", "y", "layer",
raster.image = spatial.dat[[1]]$tiffs$CD20_Dy161.tiff,
raster.mask.polygons = spatial.dat[[1]]$polygons[[1]], raster.label = "Mask")
test.sum.cd3 <- do.summarise.mask(spatial.dat[[1]]$tiffs$CD3_Er170.tiff,
polygon = spatial.dat[[1]]$polygons[[1]])
make.spatial.plot(test.sum.cd3, "x", "y", "layer",
raster.image = spatial.dat[[1]]$tiffs$CD3_Er170.tiff,
raster.mask.polygons = spatial.dat[[1]]$polygons[[1]], raster.label = "Mask")
make.colour.plot()
test.merge <- cbind(test, test.sum$layer)
test.merge
make.colour.plot(test, "x", "y", col.axis = "CD20", save.to.disk = FALSE)
test <- run.umap(test, names(test)[c(6:11)])
test <- run.flowsom(test, names(test)[c(6:11)], meta.k = 6)
make.factor.plot(test, "UMAP_X", "UMAP_Y", col.axis = "FlowSOM_metacluster", save.to.disk = FALSE, add.label = TRUE)
make.factor.plot(test, "x", "y", col.axis = "FlowSOM_metacluster", save.to.disk = FALSE)
make.colour.plot(test, "UMAP_X", "UMAP_Y", col.axis = "CD20", save.to.disk = FALSE, col.max.threshold = 0.95)
make.colour.plot(test, "UMAP_X", "UMAP_Y", col.axis = "CD3", save.to.disk = FALSE, col.max.threshold = 0.95)
make.colour.plot(test, "CD3", "CD20", col.axis = "CD3", save.to.disk = FALSE, col.max.threshold = 0.95)
make.spatial.plot(test[1,], "x", "y", "y",
raster.image = spatial.dat[[1]]$mask[[1]],
raster.mask.polygons = spatial.dat[[1]]$polygons[[1]], raster.label = "Mask")
make.spatial.plot(spatial.dat[[1]]$centroids[[1]], "x", "y", "y",
raster.image = spatial.dat[[1]]$mask[[1]],
raster.mask.polygons = spatial.dat[[1]]$polygons[[1]], raster.label = "Mask")
make.spatial.plot(test[c(1,3294),], "x", "y", "y",
col.min.threshold = 0,
col.max.threshold = 1,
raster.image = spatial.dat[[1]]$mask[[1]],
raster.mask.polygons = spatial.dat[[1]]$polygons[[1]], raster.label = "Mask")
make.spatial.plot(test[c(1,3294),], "x", "y", "y",
col.min.threshold = 0,
col.max.threshold = 1,
raster.image = spatial.dat[[1]]$tiffs$CD45_Sm152.tiff,
raster.mask.polygons = spatial.dat[[1]]$polygons[[1]], raster.label = "Mask")
nrow(cell.mes.mean[cell.mes.mean[["ImageName"]] == "20171228_spleen315_500x500_editedforFAS_s1_p9_r4_a4_ac",1])
nrow(spatial.dat[[2]]$centroids[[1]])
as.matrix(names(test))
cell.dat <- run.umap(cell.dat, c("CD11b", "CD68", "CD20", "CD3"))
make.factor.plot(cell.dat, "UMAP_X", "UMAP_Y", "ImageNum")
make.multi.marker.plot(cell.dat, "UMAP_X", "UMAP_Y", plot.by = names(cell.dat)[c(3:15)])
ttl[[x]]
ttl[[x]]
ttl[["x"]]
ttl["x"]
names(sums[[1]])
names(sums[[1]])
sums
sums <- list()
for(a in names(spatial.dat$rois[[i]]$tiffs)){
sums[[a]] <- do.summarise.mask(spatial.dat$rois[[i]]$tiffs[[a]],
polygon = spatial.dat$rois[[i]]$polygons[[1]])
}
sums[["HistoneH3_Yb176.tiff"]]
names(sums)
names(sums[[1]])
sums[[1]][1]
sums[[1]][2]
ttl <- cbind(sums[[1]][1], sums[[1]][2])
ttl["x"]
ttl
names(sums[[1]])
names(sums)
sums[[1]]
sums
sums[[1]]
for(i in names(sums)){
ttl[i] <- sums[[i]][3]
}
ttl
# sums <- rbindlist(sums, fill = TRUE)
spatial.dat$rois[[i]]$tiffs[[a]]$cell.data <- ttl
patial.dat$rois[[i]]$tiffs[[a]]
spatial.dat$rois[[i]]$tiffs[[a]]
# sums <- rbindlist(sums, fill = TRUE)
spatial.dat$rois[[i]]$cell.data <- ttl
spatial.dat$cell.dat
# sums <- rbindlist(sums, fill = TRUE)
spatial.dat$rois[[i]]$cell.data <- ttl
spatial.dat$rois[[i]]$cell.data
i
# sums <- rbindlist(sums, fill = TRUE)
spatial.dat$rois[[i]]$cell.data <- ttl
names(spatial.dat$rois)
### Load packages
library(Spectre)
package.check()
package.load()
# package.check(group = "spatial")
# package.load(group = "spatial")
library(tiff)
library(rgeos)
library(raster)
### Set directories
dirname(rstudioapi::getActiveDocumentContext()$path)            # Finds the directory where this script is located
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))     # Sets the working directory to where the script is located
getwd()
start.dr <- getwd()
start.dr
setwd("ROIs/")
roi.dir <- getwd()
setwd(start.dr)
setwd("measurement/")
measure.dir <- getwd()
setwd(start.dr)
### Read in spatial data
## Read in tiffs and mask
setwd(roi.dir)
list.dirs()
spatial.dat <- read.spatial.files(loc = roi.dir,
name = "spatial.dat",
ext = ".tiff",
mask.ext = "_mask.tiff",
convert.to.raster = TRUE)
as.matrix(names(spatial.dat))
spatial.dat$rois[[1]]$tiffs
spatial.dat$rois[[1]]$mask
# spatial.dat$rois
#
# spatial.dat
#     $ROIs
#         $ROI_001
#             $tiffs
#             $mask # keyword match and migrate
#             $polygons
#             $centroids
#             $cell.dat
#         $ROI_001
#             $tiffs
#             $mask
#             $polygons
#             $centroids
#             $cell.dat
#
## Calculate polygons and centroid coordinates (might take a few minutes)
for(i in names(spatial.dat$rois)){
#i <- names(spatial.dat)[[1]]
spatial.dat$rois[[i]]$polygons <- list()
spatial.dat$rois[[i]]$polygons[[i]] <- do.convert.mask.to.outline(spatial.dat$rois[[i]]$mask[[1]])
}
for(i in names(spatial.dat$rois)){
#i <- names(spatial.dat)[[1]]
spatial.dat$rois[[i]]$centroids <- list()
temp <- gCentroid(spatial.dat$rois[[i]]$polygons[[1]],byid=TRUE)
temp <- as.data.frame(temp)
spatial.dat$rois[[i]]$centroids[[i]] <- temp
}
spatial.dat$rois[[1]]$centroids[[1]]
spatial.dat$rois[[2]]$centroids[[1]]
x <- data.table()
for(i in names(spatial.dat$rois)){
# i <- "20171228_spleen315_500x500_editedforFAS_s1_p9_r2_a2_ac"
sums <- list()
for(a in names(spatial.dat$rois[[i]]$tiffs)){
sums[[a]] <- do.summarise.mask(spatial.dat$rois[[i]]$tiffs[[a]],
polygon = spatial.dat$rois[[i]]$polygons[[1]])
}
sums[["HistoneH3_Yb176.tiff"]]
names(sums)
names(sums[[1]])
sums[[1]][1]
sums[[1]][2]
ttl <- cbind(sums[[1]][1], sums[[1]][2])
ttl["x"]
for(i in names(sums)){
ttl[i] <- sums[[i]][3]
}
# sums <- rbindlist(sums, fill = TRUE)
spatial.dat$rois[[i]]$cell.data <- ttl
}
setwd(measure.dir)
list.files()
##
cell.mes <- fread("cell.csv", header = TRUE)
cell.mes
image.dat <- fread("Image.csv", header = TRUE)
image.dat
nrow(cell.mes) # 7361
as.matrix(names(cell.mes))
nms <- cell.mes[,c(1:2),]
nms
means <- cell.mes[,grepl( "Intensity_MeanIntensity_FullStack_" , names(cell.mes)),with = FALSE]
names(means) <- gsub("Intensity_MeanIntensity_FullStack_c", "", names(means))
names(means)
for(i in c(1:length(names(means)))){
a <- names(means)[i]
if(nchar(a) == 1){
a <- paste0("0", a)
names(means)[i] <- a
}
}
means <- means[,sort(names(means)),with = FALSE]
cell.mes.mean <- cbind(nms, means)
cell.mes.mean
ImageName <- rep("blank", nrow(cell.mes.mean))
cell.mes.mean <- cbind(ImageName, cell.mes.mean)
cell.mes.mean
cell.mes.mean
cell.mes$Location_Center_X
cell.mes$Location_Center_X
cell.mes$Location_Center_Y
cell.mes$Location_Center_Z
cell.mes.mean
cell.mes.mean <- cbind(cell.mes.mean, cell.mes$Location_Center_X, cell.mes$Location_Center_Y)
cell.mes.mean
cell.mes.mean <- data.table(cell.mes.mean, "X" = cell.mes$Location_Center_X, "Y" = cell.mes$Location_Center_Y)
cell.mes.mean
means <- means[,sort(names(means)),with = FALSE]
cell.mes.mean <- cbind(nms, means)
cell.mes.mean
ImageName <- rep("blank", nrow(cell.mes.mean))
cell.mes.mean <- cbind(ImageName, cell.mes.mean)
cell.mes.mean <- data.table(cell.mes.mean, "X" = cell.mes$Location_Center_X, "Y" = cell.mes$Location_Center_Y)
cell.mes.mean
nms <- cell.mes[,c(1:2),]
nms <- data.table(nms, "X" = cell.mes$Location_Center_X, "Y" = cell.mes$Location_Center_Y)
nms
means <- cell.mes[,grepl( "Intensity_MeanIntensity_FullStack_" , names(cell.mes)),with = FALSE]
names(means) <- gsub("Intensity_MeanIntensity_FullStack_c", "", names(means))
names(means)
for(i in c(1:length(names(means)))){
a <- names(means)[i]
if(nchar(a) == 1){
a <- paste0("0", a)
names(means)[i] <- a
}
}
means <- means[,sort(names(means)),with = FALSE]
cell.mes.mean <- cbind(nms, means)
cell.mes.mean
ImageName <- rep("blank", nrow(cell.mes.mean))
cell.mes.mean <- cbind(ImageName, cell.mes.mean)
cell.mes.mean
make.colour.plot(cell.mes.mean, "X", "Y", "01")
flt <- cell.mes.mean[cell.mes.mean[[ImageNumber]] == 1,]
flt <- cell.mes.mean[cell.mes.mean[["ImageNumber"]] == 1,]
make.colour.plot(ImageNumber, "X", "Y", "01")
make.colour.plot(flt, "X", "Y", "01")
##
as.matrix(image.dat$FileName_FullStack)
filenames <- image.dat$FileName_FullStack
filenames <- gsub("_full.tiff", "", filenames)
for(i in c(1:length(filenames))){
a <- filenames[[i]]
temp <- cell.mes.mean[cell.mes.mean[["ImageNumber"]] == i,][["ImageName"]]
temp <- rep(a, length(temp))
cell.mes.mean[cell.mes.mean[["ImageNumber"]] == i,][["ImageName"]] <- temp
}
cell.mes.mean
names(cell.mes.mean) <- c("ImageName", "ImageNumber", "ObjectNumber", "X", "Y", "Alpha_SMA",
"Vimentin",
"CD11b",
"CD45",
"CD45error",
"CD68",
"CD20",
"CD8a",
"Collagen_I",
"CD3",
"HH3",
"DNA-1",
"DNA-2")
cell.mes.mean
temp <- cell.mes.mean[,c(6:length(names(cell.mes.mean))),with = FALSE]*65535
cell.mes.mean[,c(6:length(names(cell.mes.mean)))] <- temp
cell.mes.mean
cell.mes.mean
flt <- cell.mes.mean[cell.mes.mean[["ImageNumber"]] == 1,]
flt <- cell.mes.mean[cell.mes.mean[["ImageNumber"]] == 1,]
make.colour.plot(flt, "X", "Y", "CD20")
spatial.dat$rois[[1]]$tiffs
extent(spatial.dat$rois[[1]]$tiffs[[1]])
loc = roi.dir
name = "spatial.dat"
ext = ".tiff"
mask.ext = "_mask.tiff"
convert.to.raster = TRUE
setwd(loc)
ROIs <- list.dirs(loc, recursive = FALSE, full.names = FALSE)
ROI.list <- list()
i <- ROIs[1]
#i <- ROIs[1]
setwd(loc)
setwd(i)
#i <- ROIs[1]
setwd(loc)
setwd(i)
TIFFs <- list.files(getwd(), ext)
TIFF.list <- list()
a <- TIFFs[1]
#a <- TIFFs[1]
TIFF.list[[a]] <- readTIFF(a)
TIFF.list[[a]]
dim(TIFF.list[[a]])
tiff.map <- TIFF.list[[a]]
tiff.raster <- raster(tiff.map)
tiff.raster
plot(tiff.map)
plot(tiff.raster)
test <- projectRaster(tiff.map)
library(rgdal)
